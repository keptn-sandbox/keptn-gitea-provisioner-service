// Code generated by MockGen. DO NOT EDIT.
// Source: keptn-sandbox/keptn-gitea-provisioner/pkg/provisioner (interfaces: GiteaClient)

// Package fake is a generated GoMock package.
package fake

import (
	reflect "reflect"

	gitea "code.gitea.io/sdk/gitea"
	gomock "github.com/golang/mock/gomock"
)

// MockGiteaClient is a mock of GiteaClient interface.
type MockGiteaClient struct {
	ctrl     *gomock.Controller
	recorder *MockGiteaClientMockRecorder
}

// MockGiteaClientMockRecorder is the mock recorder for MockGiteaClient.
type MockGiteaClientMockRecorder struct {
	mock *MockGiteaClient
}

// NewMockGiteaClient creates a new mock instance.
func NewMockGiteaClient(ctrl *gomock.Controller) *MockGiteaClient {
	mock := &MockGiteaClient{ctrl: ctrl}
	mock.recorder = &MockGiteaClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGiteaClient) EXPECT() *MockGiteaClientMockRecorder {
	return m.recorder
}

// AdminCreateRepo mocks base method.
func (m *MockGiteaClient) AdminCreateRepo(arg0 string, arg1 gitea.CreateRepoOption) (*gitea.Repository, *gitea.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AdminCreateRepo", arg0, arg1)
	ret0, _ := ret[0].(*gitea.Repository)
	ret1, _ := ret[1].(*gitea.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// AdminCreateRepo indicates an expected call of AdminCreateRepo.
func (mr *MockGiteaClientMockRecorder) AdminCreateRepo(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AdminCreateRepo", reflect.TypeOf((*MockGiteaClient)(nil).AdminCreateRepo), arg0, arg1)
}

// AdminCreateUser mocks base method.
func (m *MockGiteaClient) AdminCreateUser(arg0 gitea.CreateUserOption) (*gitea.User, *gitea.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AdminCreateUser", arg0)
	ret0, _ := ret[0].(*gitea.User)
	ret1, _ := ret[1].(*gitea.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// AdminCreateUser indicates an expected call of AdminCreateUser.
func (mr *MockGiteaClientMockRecorder) AdminCreateUser(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AdminCreateUser", reflect.TypeOf((*MockGiteaClient)(nil).AdminCreateUser), arg0)
}

// CreateAccessToken mocks base method.
func (m *MockGiteaClient) CreateAccessToken(arg0 gitea.CreateAccessTokenOption) (*gitea.AccessToken, *gitea.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAccessToken", arg0)
	ret0, _ := ret[0].(*gitea.AccessToken)
	ret1, _ := ret[1].(*gitea.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// CreateAccessToken indicates an expected call of CreateAccessToken.
func (mr *MockGiteaClientMockRecorder) CreateAccessToken(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAccessToken", reflect.TypeOf((*MockGiteaClient)(nil).CreateAccessToken), arg0)
}

// DeleteAccessToken mocks base method.
func (m *MockGiteaClient) DeleteAccessToken(arg0 interface{}) (*gitea.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteAccessToken", arg0)
	ret0, _ := ret[0].(*gitea.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteAccessToken indicates an expected call of DeleteAccessToken.
func (mr *MockGiteaClientMockRecorder) DeleteAccessToken(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteAccessToken", reflect.TypeOf((*MockGiteaClient)(nil).DeleteAccessToken), arg0)
}

// DeleteRepo mocks base method.
func (m *MockGiteaClient) DeleteRepo(arg0, arg1 string) (*gitea.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteRepo", arg0, arg1)
	ret0, _ := ret[0].(*gitea.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteRepo indicates an expected call of DeleteRepo.
func (mr *MockGiteaClientMockRecorder) DeleteRepo(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteRepo", reflect.TypeOf((*MockGiteaClient)(nil).DeleteRepo), arg0, arg1)
}

// GetUserInfo mocks base method.
func (m *MockGiteaClient) GetUserInfo(arg0 string) (*gitea.User, *gitea.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserInfo", arg0)
	ret0, _ := ret[0].(*gitea.User)
	ret1, _ := ret[1].(*gitea.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetUserInfo indicates an expected call of GetUserInfo.
func (mr *MockGiteaClientMockRecorder) GetUserInfo(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserInfo", reflect.TypeOf((*MockGiteaClient)(nil).GetUserInfo), arg0)
}
