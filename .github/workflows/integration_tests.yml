name: Integration Tests
on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: "0 3 * * 1-5" # run integration tests at 3 AM, monday to friday (1-5)

  workflow_dispatch: # run integration tests only when triggered manually

defaults:
  run:
    shell: bash
jobs:
  integration_test:
    name: "Integration tests"
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        keptn-version: ["0.16.0"] # https://github.com/keptn/keptn/releases
    env:
      GO_VERSION: 1.17
      GO111MODULE: "on"
      ENABLE_E2E_TEST: true
      BRANCH: ${{ github.head_ref || github.ref_name }}
      KUBECONFIG: /etc/rancher/k3s/k3s.yaml
      GITEA_ADMIN_USERNAME: MyAwesomeGiteaAdmin
      GITEA_ADMIN_PASSWORD: AReallyAwesomeGiteaPassword
    steps:
      - name: Check out code.
        uses: actions/checkout@v3.0.2

      - name: Setup Go
        uses: actions/setup-go@v3.2.0
        with:
          go-version-file: "go.mod"

      - name: Install gotestsum
        shell: bash
        run: go install gotest.tools/gotestsum@latest

      # Download artifacts from last CI run
      - name: Download artifacts
        uses: dawidd6/action-download-artifact@v2.21.0
        id: download_artifacts_push
        with:
          # Download last successful artifact from a CI build
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: CI.yml
          branch: ${{ env.BRANCH }}
          path: ./dist

      # Prepare K3d + Keptn environment
      - name: Install and start K3s
        run: |
          curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION="v1.21.12+k3s1" INSTALL_K3S_EXEC="--no-deploy traefik" K3S_KUBECONFIG_MODE="644" sh -

      - name: Wait for K3s to become ready
        timeout-minutes: 1
        run: |
          # uncomment the line below for debugging
          #set -x
          k3sReady=$(kubectl get node $(hostname) -ogo-template --template="{{ range .status.conditions }} {{- if eq .type \"Ready\" }}{{ .status }} {{- end }} {{- end }}" || echo "")
          while [ "$k3sReady" != "True" ]; do
          echo "K3s is not ready yet, sleep awhile to let things settle"
          sleep 5
          k3sReady=$(kubectl get node $(hostname) -ogo-template --template="{{ range .status.conditions }} {{- if eq .type \"Ready\" }}{{ .status }} {{- end }} {{- end }}" || echo "")
          done;
          echo "K3s ready!!!"

      - name: Install Keptn
        id: install_keptn
        uses: keptn-sandbox/action-install-keptn@v1.0.0
        timeout-minutes: 10
        with:
          KEPTN_VERSION: ${{ matrix.keptn-version }}
          KEPTN_INSTALL_PARAMETERS: -v --endpoint-service-type=LoadBalancer
          KUBECONFIG: ${{ env.KUBECONFIG }}

      - name: Test connection to keptn
        run: |
          curl -X GET "${{ steps.install_keptn.outputs.KEPTN_ENDPOINT }}/v1/metadata" -H  "accept: application/json" -H  "x-token: ${{ steps.install_keptn.outputs.KEPTN_API_TOKEN }}"

      - name: Install Gitea
        run: |
          helm repo add gitea-charts https://dl.gitea.io/charts/
          helm repo update
          helm install gitea gitea-charts/gitea \
            --set memcached.enabled=false \
            --set postgresql.enabled=false \
            --set gitea.config.database.DB_TYPE=sqlite3 \
            --set gitea.admin.username=${GITEA_ADMIN_USERNAME} \
            --set gitea.admin.password=${AReallyAwesomeGiteaPassword} \
            --set gitea.config.server.OFFLINE_MODE=true \
            --set gitea.config.server.ROOT_URL=http://gitea-http.default:3000/

      # Install Keptn-Service-Template-Go from downloaded helm chart
      - name: Install Keptn-Service-Template-Go
        run: |
          helm upgrade --install keptn-service-template-go \
            ./dist/helm-charts/keptn-service-template-go-*.tgz \
            --set admin.create=true \
            --set admin.username=${GITEA_ADMIN_USERNAME} \
            --set admin.password=${GITEA_ADMIN_PASSWORD} \
            --wait

      - name: Run integration tests
        env:
          KEPTN_ENDPOINT: ${{ steps.install_keptn.outputs.KEPTN_ENDPOINT }}
          KEPTN_API_TOKEN: ${{ steps.install_keptn.outputs.KEPTN_API_TOKEN }}
        shell: bash
        working-directory: keptn-service-template-go
        run: |
          gotestsum ./test/e2e/...
